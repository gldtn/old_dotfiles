#!/usr/bin/env sh

# See this wiki page for information:
#  - https://github.com/koekeishiya/yabai/wiki
#

# Configure scripting addition and update HASH
# this hash must be updated manually after running brew upgrade.
#
# sudo visudo -f /private/etc/sudoers.d/yabai
# echo "$(whoami) ALL=(root) NOPASSWD: sha256:$(shasum -a 256 $(which yabai) | cut -d " " -f 1) $(which yabai) --load-sa"
#
yabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"
sudo yabai --load-sa

# Signals
yabai -m signal --add event=window_destroyed active=yes action="yabai -m query --windows --window &> /dev/null || yabai -m window --focus mouse &> /dev/null || yabai -m window --focus \$(yabai -m query --windows --space | jq .[0].id) &> /dev/null"
yabai -m signal --add event=window_minimized active=yes action="if \$(yabai -m query --windows --window \$YABAI_WINDOW_ID | jq -r '.\"is-floating\"'); then yabai -m query --windows --window &> /dev/null || yabai -m window --focus mouse &> /dev/null || yabai -m window --focus \$(yabai -m query --windows --space | jq .[0].id) &> /dev/null; fi"


# sketchybar events (.yabairc)
yabai -m signal --add event=window_focused action="sketchybar -m --trigger window_focus &> /dev/null"
yabai -m signal --add event=window_minimized action="sketchybar -m --trigger window_focus &> /dev/null"
yabai -m signal --add event=window_title_changed action="sketchybar -m --trigger title_change &> /dev/null"

# Space names
#yabai -m space 1 --label one
#yabai -m space 2 --label two
#yabai -m space 3 --label three
#yabai -m space 4 --label four
#yabai -m space 5 --label five
#yabai -m space 6 --label six

# BAR HEIGHT
BAR_HEIGHT=$(sketchybar -m --query bar | jq -r '.height')

GENERAL=(
    external_bar all:"${BAR_HEIGHT}":0
    split_type auto
    split_ratio 0.5
    auto_balance off
    insert_feedback_color 0xff282a36
)

LAYOUT=(
    layout bsp
    top_padding 6
    bottom_padding 6
    left_padding 6
    right_padding 6
    window_gap 6
)

WINDOWS=(
    window_placement second_child
    window_shadow float
    window_opacity on
    active_window_opacity 1.0
    normal_window_opacity 0.95
    window_opacity_duration 0.15
    window_animation_duration 0.0
    window_origin_display cursor # (options: default, focused, cursor)
)

MOUSE=(
    mouse_modifier fn
    mouse_action1 move
    mouse_action2 resize
    mouse_drop_action swap
    focus_follows_mouse off
    mouse_follows_focus off
)

yabai -m config "${GENERAL[@]}"
yabai -m config "${LAYOUT[@]}"
yabai -m config "${WINDOWS[@]}"
yabai -m config "${MOUSE[@]}"

CASA=(
    Firefox
    SigmaOS
    Google Chrome
)

for ((i = 1; i <= "${#CASA[@]}"; i++)); do
    yabai -m rule --add label="casa_${CASA[(($i - 1))]}" app="^${CASA[(($i - 1))]}.*$" space=1
done

SOCIAL=(
    Slack
	Discord
    WhatsApp
    Messages
    Telegram
    Messenger
)

for ((i = 1; i <= "${#SOCIAL[@]}"; i++)); do
	yabai -m rule --add label="social_${SOCIAL[(($i - 1))]}" app="^${SOCIAL[(($i - 1))]}.*$" space=10
done

MEDIA=(
    Spotify
    Music
)

for ((i = 1; i <= "${#MEDIA[@]}"; i++)); do
	yabai -m rule --add label="media_${MEDIA[(($i - 1))]}" app="^${MEDIA[(($i - 1))]}.*$" space=4
done

OTHER=(
	Inkscape
)

for ((i = 1; i <= "${#OTHER[@]}"; i++)); do
	yabai -m rule --add label="other_${OTHER[(($i - 1))]}" app="^${OTHER[(($i - 1))]}.*$" space=5
done

CODE=(
	Code
)

for ((i = 1; i <= "${#CODE[@]}"; i++)); do
	yabai -m rule --add label="code_${CODE[(($i - 1))]}" app="^${CODE[(($i - 1))]}.*$" space=6
done

TERMCONF=(
    Sublime Text
)

for ((i = 1; i <= "${#TERMCONF[@]}"; i++)); do
    yabai -m rule --add label="termconf_${TERMCONF[(($i - 1))]}" app="^${TERMCONF[(($i - 1))]}.*$" space=7
done

MAIL=(
	Mimestream
    Thunderbird Daily
)

for ((i = 1; i <= "${#MAIL[@]}"; i++)); do
	yabai -m rule --add label="mail_${MAIL[(($i - 1))]}" app="^${MAIL[(($i - 1))]}.*$" space=8
done

READ=(
    Skim
)

for ((i = 1; i <= "${#READ[@]}"; i++)); do
    yabai -m rule --add label="read_${READ[(($i - 1))]}" app="^${READ[(($i - 1))]}.*$" space=5
done

# STICKY apps
STICKY=(
    mpv
    VLC
    Plex
    IINA
    AltTab
    Superkey
    Hyperkey
    Bitwarden
    1Password
    ColorSlurp
    Authy Desktop
    SpaceLauncher
    System Settings
    System Preferences
)

for ((i = 1; i <= "${#STICKY[@]}"; i++)); do
    yabai -m rule --add label="sticky_${STICKY[(($i - 1))]}" app="^${STICKY[(($i - 1))]}.*$" sticky=on
done

# FLOATING apps
UNMANAGED=(
    Settings
    Preferences
    System Settings
    System Preferences
    System Information
    Activity Monitor
    Software Update
    Archive Utility
    Disk Utility
    Calculator
    Dictionary
    App Store
    FaceTime
    zoom.us
    Finder
    Steam
    VLC
    Pika
    Herd
    IINA
    Notes
    Authy
    Python
    AltTab
    Alfred
    Raycast
    Hyperkey
    Superkey
    Calendar
    ForkLift
    Bitwarden
    UÌˆbersicht
    SideNotes
    ColorSlurp
    Hidden Bar
    AppCleaner
    ExpressVPNz
    LibreOffice
    Photo Booth
    CleanShot X
    Bitcoin Core
    Opal Composer
    SpaceLauncher
    Camtasia 2022
    Screen Sharing
    Inkscape Settings
    MobileDeviceUpdater
)

for ((i = 1; i <= "${#UNMANAGED[@]}"; i++)); do
    yabai -m rule --add label="unmanage_${UNMANAGED[(($i - 1))]}" app="^${UNMANAGED[(($i - 1))]}.*$" manage=off
done

# App rules - Use $( yabai -m query --windows | jq '.[].app' ) to find app name

# Apps notifications (testing..)
yabai -m rule --add app="^Google Chrome$" title="^Typhon Notification$" manage=off
yabai -m rule --add app="^DuckDuckGo$" title="^(General|Settings|Software Update)&" manage=off

# Exclude problematic apps from being managed:
yabai -m rule --add label="Finder" app="^Finder$" title="^(Co(py|nnect)|Move|Info|Pref)&" manage=off
yabai -m rule --add label="About This Mac" app="System Information" title="About This Mac" manage=off
yabai -m rule --add label="Select file to save to" app="^Inkscape$" title="Select file to save to" manage=off
yabai -m rule --add label="Thunderbird" app="^Thunderbird Daily$" title="^(Write:|Sending Message -)$" manage=off
yabai -m rule --add label="Safari" app="^Safari$" title="^(General|(Tab|Password|Website|Extension)s|AutoFill|Se(arch|curity)|Privacy|Advance)$" manage=off
yabai -m rule --add label="Chrome" app="^Google Chrome$" title="^(General|(Tab|Password|Website|Extension)s|AutoFill|Se(arch|curity)|Privacy|Advance)$" manage=off
yabai -m rule --add label="Mimestream" app="^Mimestream$" title="^(Appearance|General|Accounts|Software Update)&" manage=off

echo "yabai configuration loaded.."
